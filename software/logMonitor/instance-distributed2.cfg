[buildout]
parts =
  zookeeper-instance
  consumer-instance
  producer-instance
  solr-instance1
  solr-instance2
  mongo-instance3
  mongo-instance6
  mongo-cfg1
  mongo-cfg2
  mongo-cfg3
  mongoszk-instance
  publish-connection-information
  
eggs-directory = ${buildout:eggs-directory}
develop-eggs-directory = ${buildout:develop-eggs-directory}
offline = true

#request zookeeper
[zookeeper-instance]
<= slap-connection
recipe = slapos.cookbook:request
name = Zookeeper
software-url = $${slap-connection:software-release-url}
software-type = zookeeper
return = zookeeper-ip zookeeper-port

###################################################
#           request mongo                         #
#create two replica set with three nodes for each #
###################################################

# Frist replicat set #
[mongo-instance1]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongo1
software-url = $${slap-connection:software-release-url}
software-type = mongo
config = port repset
config-port = 61000
config-repset = repset1
return = mongo-ip mongo-port

[mongo-instance2]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongo2
software-url = $${slap-connection:software-release-url}
software-type = mongo
config = port repset
config-port = 63000
config-repset = repset1
return = mongo-ip mongo-port

[mongo-instance3]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongo3
software-url = $${slap-connection:software-release-url}
software-type = mongo3
config = port  repset servers
config-port = 59000
config-repset = repset1
return = mongo-ip mongo-port
config-servers = $${mongo-instance1:connection-mongo-ip}:$${mongo-instance1:connection-mongo-port}
      $${mongo-instance2:connection-mongo-ip}:$${mongo-instance2:connection-mongo-port}      


# Seconde replica set #
[mongo-instance4]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongo4
software-url = $${slap-connection:software-release-url}
software-type = mongo
config = port repset
config-port = 34000
config-repset = repset2
return = mongo-ip mongo-port

[mongo-instance5]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongo5
software-url = $${slap-connection:software-release-url}
software-type = mongo
config = port repset
config-port = 36000
config-repset = repset2
return = mongo-ip mongo-port

[mongo-instance6]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongo6
software-url = $${slap-connection:software-release-url}
software-type = mongo3
config = port  repset servers
config-port = 38000
config-repset = repset2
return = mongo-ip mongo-port
config-servers = $${mongo-instance4:connection-mongo-ip}:$${mongo-instance4:connection-mongo-port}
      $${mongo-instance5:connection-mongo-ip}:$${mongo-instance5:connection-mongo-port}

# MongoConf servers for metadata
[mongo-cfg1]
<= slap-connection
recipe = slapos.cookbook:request
name = MongoCFG1
software-url = $${slap-connection:software-release-url}
software-type = mongocfg
config = port 
config-port = 51000
return = mongo-ip mongo-port

[mongo-cfg2]
<= slap-connection
recipe = slapos.cookbook:request
name = MongoCFG2
software-url = $${slap-connection:software-release-url}
software-type = mongocfg
config = port
config-port = 54000
return = mongo-ip mongo-port

[mongo-cfg3]
<= slap-connection
recipe = slapos.cookbook:request
name = MongoCFG3
software-url = $${slap-connection:software-release-url}
software-type = mongocfg
config = port
config-port = 56000
return = mongo-ip mongo-port



# Mongos Instance for proxifiying requests 

[mongoszk-instance]
<= slap-connection
recipe = slapos.cookbook:request
name = Mongos
software-url = $${slap-connection:software-release-url}
software-type = mongoszk
config = port servers zookeeper shards
config-port = 53000
return = mongo-ip mongo-port 
config-zookeeper = $${zookeeper-instance:connection-zookeeper-ip}:$${zookeeper-instance:connection-zookeeper-port}
config-servers = $${mongo-cfg1:connection-mongo-ip}:$${mongo-cfg1:connection-mongo-port}
                 $${mongo-cfg2:connection-mongo-ip}:$${mongo-cfg2:connection-mongo-port}
                 $${mongo-cfg3:connection-mongo-ip}:$${mongo-cfg3:connection-mongo-port}
config-shards = $${mongo-instance1:config-repset}/$${mongo-instance1:connection-mongo-ip}:$${mongo-instance1:connection-mongo-port}
	        $${mongo-instance4:config-repset}/$${mongo-instance4:connection-mongo-ip}:$${mongo-instance4:connection-mongo-port}

##################################################
#		request solrcloud		 #
# Instanciate Solr with two shards               #
##################################################

[solr-instance1]
<= slap-connection
recipe = slapos.cookbook:request
name = Solr
software-url = $${slap-connection:software-release-url}
software-type = solr
config = zookeeper bootstrap num-shards
config-zookeeper = $${zookeeper-instance:connection-zookeeper-ip}:$${zookeeper-instance:connection-zookeeper-port}
config-bootstrap = ${buildout:bin-directory}/solr
config-num-shards = 2

                                                                                                                                         
[solr-instance2]
<= slap-connection
recipe = slapos.cookbook:request
name = Solr2
software-url = $${slap-connection:software-release-url}
software-type = solrjoin
config = zookeeper bootstrap
config-zookeeper = $${zookeeper-instance:connection-zookeeper-ip}:$${zookeeper-instance:connection-zookeeper-port}
config-bootstrap = ${buildout:bin-directory}/solr


#producer instance
[rootdirectorypc]
recipe = slapos.cookbook:mkdirectory
etc = $${buildout:directory}/etc

[basedirectorypc]
recipe = slapos.cookbook:mkdirectory
services = $${rootdirectorypc:etc}/run

[producer-instance]
recipe = slapos.cookbook:resilientlog.producer
ip = $${slap-network-information:global-ipv6}
port = 9983
zookeeper-addr = $${zookeeper-instance:connection-zookeeper-ip}:$${zookeeper-instance:connection-zookeeper-port}
producer-bin  = ${buildout:bin-directory}/producer
path = $${basedirectorypc:services}/producer
certificat-dir = $${rootdirectorypc:etc}
[publish-connection-information]
recipe = slapos.cookbook:publish
producer-ip = $${producer-instance:ip}
producer-port = $${producer-instance:port}

#request consumer 
[consumer-instance]
<= slap-connection
recipe = slapos.cookbook:request
name = Consumer
software-url = $${slap-connection:software-release-url}
software-type = consumer
config = zookeeper
config-zookeeper = $${zookeeper-instance:connection-zookeeper-ip}:$${zookeeper-instance:connection-zookeeper-port}
